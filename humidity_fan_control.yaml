blueprint:
  name: Gestion de l'humidité avec Zigbee2MQTT
  description: Allume et éteint un ventilateur basé sur la différence entre un capteur d'humidité et un seuil de référence, en utilisant des appareils Zigbee via Zigbee2MQTT.
  domain: automation
  input:
    humidity_sensor:
      name: Capteur d'Humidité
      description: Un capteur qui mesure l'humidité relative de la zone à ventiler, par exemple la douche.
      selector:
        entity:
          domain: sensor
    reference_humidity_sensor:
      name: Capteur d'Humidité de Référence
      description: Un capteur qui indique l'humidité relative de référence de la zone en dehors de la zone ventilée, par exemple le couloir à l'extérieur de la douche.
      selector:
        entity:
          domain: sensor
    fan_switch:
      name: Interrupteur du Ventilateur
      description: L'interrupteur qui contrôle le ventilateur.
      selector:
        entity:
          domain: switch
    rising_threshold:
      name: Seuil d'Augmentation (%)
      description: L'augmentation de l'humidité relative par rapport à l'humidité de référence qui doit se produire avant que le ventilateur ne soit allumé.
      selector:
        number:
          min: 0
          max: 100
          mode: slider
          step: 1
      default: 10
    falling_threshold:
      name: Seuil de Diminution (%)
      description: La diminution de l'humidité relative par rapport à l'humidité de référence qui doit se produire avant que le ventilateur ne soit éteint.
      selector:
        number:
          min: 0
          max: 100
          mode: slider
          step: 1
      default: 5

trigger:
  - platform: state
    entity_id: !input "humidity_sensor"
  - platform: state
    entity_id: !input "reference_humidity_sensor"

condition: []

action:
  - variables:
      humid_percent: "{{ states(humidity_sensor) | float }}"
      ref_humid_percent: "{{ states(reference_humidity_sensor) | float }}"
      difference: "{{ humid_percent - ref_humid_percent }}"
      fan_state: "{{ states(fan_switch) }}"
      rising_threshold: !input "rising_threshold"
      falling_threshold: !input "falling_threshold"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ fan_state == 'off' and difference > rising_threshold }}"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input "fan_switch"
      - conditions:
          - condition: template
            value_template: "{{ fan_state == 'on' and difference < falling_threshold }}"
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input "fan_switch"

mode: single

