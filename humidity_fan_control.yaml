blueprint:
  name: Contrôle Intelligent du Ventilateur (Simplifié)
  description: Active ou désactive le ventilateur basé sur des seuils d'humidité, avec options de contrôle manuel et timer.
  domain: automation
  input:
    fan_switch:
      name: Commutateur du Ventilateur
      description: Choisissez le commutateur qui contrôle votre ventilateur.
      selector:
        entity:
          domain: switch
    humidity_sensor:
      name: Capteur d'Humidité (Zone Ventilée)
      description: Sélectionnez le capteur qui mesure l'humidité dans la zone où le ventilateur est utilisé.
      selector:
        entity:
          domain: sensor
    reference_humidity_sensor:
      name: Capteur d'Humidité de Référence (Zone Non-Ventilée)
      description: Sélectionnez un capteur de référence pour comparer l'humidité hors de la zone ventilée.
      selector:
        entity:
          domain: sensor
    manual_override:
      name: Commande Manuelle
      description: Interrupteur manuel pour contrôle direct du ventilateur (bascule ON/OFF).
      selector:
        entity:
          domain: input_boolean
    timer_duration:
      name: Durée du Timer (en minutes)
      description: Temps après lequel le ventilateur s'éteindra automatiquement quand activé manuellement.
      default: 20
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: 'minutes'
    activation_threshold:
      name: Seuil d'Activation (%)
      description: L'augmentation d'humidité (%) nécessaire par rapport au capteur de référence pour activer le ventilateur.
      default: 10
      selector:
        number:
          min: 0
          max: 100
          mode: slider
          step: 1
    deactivation_threshold:
      name: Seuil de Désactivation (%)
      description: La baisse d'humidité (%) nécessaire par rapport au capteur de référence pour désactiver le ventilateur.
      default: 5
      selector:
        number:
          min: 0
          max: 100
          mode: slider
          step: 1

trigger:
  - platform: state
    entity_id: !input "humidity_sensor"
  - platform: state
    entity_id: !input "reference_humidity_sensor"
  - platform: state
    entity_id: !input "manual_override"

condition: []

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ states(manual_override) == 'on' }}"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input "fan_switch"
          - delay: "{{ timer_duration | int }}m"
          - service: switch.turn_off
            target:
              entity_id: !input "fan_switch"
      - conditions:
          - condition: template
            value_template: "{{ states(manual_override) == 'off' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ states('switch.fan_switch') == 'off' and ((states(humidity_sensor) | float) - (states(reference_humidity_sensor) | float) > activation_threshold | int) }}"
                sequence:
                  - service: switch.turn_on
                    target:
                      entity_id: !input "fan_switch"
              - conditions:
                  - condition: template
                    value_template: "{{ states('switch.fan_switch') == 'on' and ((states(humidity_sensor) | float) - (states(reference_humidity_sensor) | float) < deactivation_threshold | int) }}"
                sequence:
                  - service: switch.turn_off
                    target:
                      entity_id: !input "fan_switch"
mode: restart
